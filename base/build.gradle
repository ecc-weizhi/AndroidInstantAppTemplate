apply plugin: 'com.android.feature'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

android {
    buildToolsVersion rootProject.buildToolsVersion
    compileSdkVersion rootProject.compileSdkVersion
    baseFeature true

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexEnabled true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

if (rootProject.file(rootProject.keyStore).exists()) {
    android.signingConfigs.release.storeFile rootProject.file(rootProject.keyStore)
    android.signingConfigs.release.storePassword rootProject.keyStorePassword
    android.signingConfigs.release.keyAlias rootProject.keyAlias
    android.signingConfigs.release.keyPassword rootProject.keyAliasPassword
}

dependencies {
    api "com.google.android.instantapps:instantapps:$rootProject.instantAppVersion"
    api "com.android.support:appcompat-v7:$rootProject.supportVersion"
    api "com.android.support:design:$rootProject.supportVersion"
    api "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"

    api "app.eccweizhi:onscreenlog-timber:$rootProject.onscreenlogVersion"

    api "com.squareup.retrofit2:converter-jackson:$rootProject.retrofit2Version"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2Version"

    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"

    api "com.xwray:groupie:$rootProject.groupieVersion"
    api "com.xwray:groupie-kotlin-android-extensions:$rootProject.groupieVersion"

    api "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    api "com.google.dagger:dagger:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    api "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"

    api "com.jakewharton.timber:timber:$rootProject.timberVersion"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"

    testImplementation "junit:junit:$rootProject.junitVersion"

    androidTestImplementation "com.android.support.test:runner:$rootProject.testVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

    debugApi "com.android.support:multidex:$rootProject.multiDexVersion"

    application project(':app')
    feature project(":spring")
    feature project(":summer")
    feature project(":autumn")
    feature project(":winter")
}